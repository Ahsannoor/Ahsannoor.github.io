{"version":3,"sources":["pages/Login/index.js","util/Constants.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","assets/images/WiMetrix.png","assets/images/textile-industry-production.jpg"],"names":["Signin","props","React","useState","username","password","state","setState","handleChange","e","target","name","value","style","backgroundColor","height","display","gridTemplateColumns","flexDirection","justifyContent","alignItems","color","backgroundImage","Image","fontSize","padding","container","variant","textAlign","fontWeight","marginTop","item","lg","md","sm","xs","onChange","label","fullWidth","type","onClick","fetch","serverIP","login","then","response","ok","json","Error","data","Error_No","localStorage","setItem","userInfo","userName","unitID","UNIT_ID","UsUnitID","US_UNIT_ID","unitCode","UNIT_CODE","JSON","stringify","history","push","NotificationManager","error","Error_Description","ex","console","log","catch","paddingTop","paddingBottom","src","require","alt","width","monthNames","forViewgetOrdersFromCutReport","forViewgetCutsForOrder","forViewgetBundlesForOrderCut","updateBundle","getOrdersFromOracle","getCutReportFromOracleForOrder","uploadCutReport","uploadOperations","getAllOperations","updateOperationInfo","uploadMachines","getAllMachines","updateMachineInfo","getAllWorkersFromOracle","uploadWorkers","getAllUnits","getAllSections","getAllWorkers","updateWorkerInfo","getOrdersForStyleBulletinFromOracle","getStyleBulletin","uploadStyleBulletin","getOrdersFromOracleForCutBundleCreation","createCutBundleForOrder","getLinesForUnit","addUser","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","forwardRef","ref","_props$alignContent","alignContent","_props$alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","createElement","_extends","StyledGrid","withStyles","theme","boxSizing","flexWrap","margin","minWidth","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","capitalize","typography","caption","button","overline","srOnly","position","overflow","alignLeft","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","displayInline","displayBlock","module","exports"],"mappings":"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","file":"static/js/6.031cfcb7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, TextField, Button, Typography } from \"@material-ui/core\";\r\nimport Image from \"../../assets/images/textile-industry-production.jpg\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { serverIP, login } from \"../../util/Constants\";\r\n//import axios from 'axios';\r\n\r\nconst Signin = (props) => {\r\n    const [state, setState] = React.useState({ username: \"\", password: \"\" });\r\n\r\n    // React.useEffect(()=>{\r\n    //     axios.get('/api/basic/list')\r\n    //     .then(res => console.log('res.data.Basic: ',res.data.Basic))\r\n    // },[])\r\n    const handleChange = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        if (state.username != \"\" && state.password != \"\") {\r\n            fetch(\r\n                serverIP +\r\n                    login +\r\n                    \"?userCode=\" +\r\n                    state.username +\r\n                    \"&password=\" +\r\n                    state.password\r\n            )\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    } else {\r\n                        throw new Error(\"Something went wrong\");\r\n                    }\r\n                })\r\n                .then((data) => {\r\n                    try {\r\n                        if (data.Error_No == 0) {\r\n                            localStorage.setItem(\"isLoggedIn\", true);\r\n                            let userInfo = {\r\n                                userName: state.username,\r\n                                password: state.password,\r\n                                unitID: data.UNIT_ID,\r\n                                UsUnitID: data.US_UNIT_ID,\r\n                                unitCode: data.UNIT_CODE,\r\n                            };\r\n                            localStorage.setItem(\r\n                                \"userInfo\",\r\n                                JSON.stringify(userInfo)\r\n                            );\r\n                            props.history.push(\"/home\");\r\n                        } else {\r\n                            NotificationManager.error(\r\n                                \"Failed to login\" + data.Error_Description\r\n                            );\r\n                        }\r\n                    } catch (ex) {\r\n                        console.log(\"error\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    NotificationManager.error(\r\n                        \"Failed to login, connection to server failed\"\r\n                    );\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            NotificationManager.error(\"Username or password is not provided!\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: \"#f6f6f6\",\r\n                height: \"100vh\",\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"40% 60%\",\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    backgroundColor: \"black\",\r\n                    color: \"#fff\",\r\n                    backgroundImage: `linear-gradient(to bottom, rgba(13, 81, 5, 0.6), rgba(37, 37, 37, 0.6)),\r\nurl(${Image})`,\r\n                }}\r\n            >\r\n                <h2 style={{ fontSize: \"60px\" }}>US APPAREL</h2>\r\n                {/* <div style={{display:'flex',justifyContent:'center',paddingTop:0,paddingBottom:20}}>\r\n                    <img src={require('../../../assets/rtl.jpg')} alt=\"Logo\" style={{width:310}}/>\r\n                </div> */}\r\n                <h4 style={{ fontSize: \"20px\" }}>Sign In To Continue</h4>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    padding: \"0px 20px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Grid\r\n                    container\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                    <Typography\r\n                        variant=\"h3\"\r\n                        style={{ textAlign: \"center\", fontWeight: \"700\" }}\r\n                    >\r\n                        Welcome to Smart Factory Management\r\n                    </Typography>\r\n                </Grid>\r\n                {/* <Grid container style={{ display:'flex',justifyContent:'center'}}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Sign In</Typography>\r\n                    </Grid>\r\n                </Grid> */}\r\n\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginTop: 50,\r\n                    }}\r\n                >\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <TextField\r\n                            name=\"username\"\r\n                            onChange={handleChange}\r\n                            value={state.username}\r\n                            label=\"Username\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <TextField\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            onChange={handleChange}\r\n                            value={state.password}\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            style={{ height: \"50px\", color: \"#fff\" }}\r\n                            color=\"primary\"\r\n                            onClick={() => handleLogin()}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        paddingTop: 40,\r\n                        paddingBottom: 20,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"subtitle2\" color=\"black\">\r\n                        Powered By\r\n                    </Typography>\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        paddingTop: 0,\r\n                        paddingBottom: 20,\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={require(\"../../assets/images/WiMetrix.png\")}\r\n                        alt=\"Logo\"\r\n                        style={{ width: 210 }}\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        paddingTop: 0,\r\n                        paddingBottom: 20,\r\n                    }}\r\n                ></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n","//export const serverIP = \"http://us2levisqms/US2_wage_portal/\";\r\n//export const serverIP = \"http://us2levisqms/US2_SPTS/\";\r\nexport const serverIP = \"http://us2levisqms/US2_SPTS/\";\r\n//export const serverIP = \"http://192.168.88.214/US2_SPTS/\";\r\nexport const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n];\r\n\r\nexport const login = \"/userLogin.php\";\r\n\r\n// For View Cutreport\r\nexport const forViewgetOrdersFromCutReport =\r\n    \"CutReport/View CutReport/getOrdersFromCutreport.php\";\r\nexport const forViewgetCutsForOrder =\r\n    \"CutReport/View CutReport/getCutsForOrderFromCutreport.php\";\r\nexport const forViewgetBundlesForOrderCut =\r\n    \"CutReport/View CutReport/getBundlesForOrder,CutFromCutreport.php\";\r\n\r\nexport const updateBundle =\r\n    \"CutReport/View CutReport/updateQuantityForItemID.php\";\r\n\r\n//For Upload Cutreport\r\nexport const getOrdersFromOracle =\r\n    \"CutReport/Upload CutReport/getOrdersFromOracle.php\";\r\nexport const getCutReportFromOracleForOrder =\r\n    \"CutReport/Upload CutReport/fetchCutReportForOrderFromOracle.php\";\r\nexport const uploadCutReport = \"CutReport/Upload CutReport/uploadCutReport.php\";\r\n\r\n// Upload Operations\r\nexport const getAllOperationsFromOracle =\r\n    \"Operations/Upload Operations/getAllOperations.php\";\r\nexport const uploadOperations =\r\n    \"Operations/Upload Operations/UploadOperations.php\";\r\n\r\n// Operations\r\nexport const getAllOperations = \"Operations/getAllOperations.php\";\r\nexport const getAllOperationsFromSql = \"Operations/getAllOperationsFromSQL.php\";\r\nexport const updateOperationInfo = \"Operations/updateOperationInfo.php\";\r\n\r\n// Upload Machines\r\nexport const getAllMachinesFromOracle =\r\n    \"Machines/Upload Machines/getAllMachinesFromOracle.php\";\r\nexport const uploadMachines = \"Machines/Upload Machines/UploadMachines.php\";\r\n//Machines\r\nexport const getAllMachines = \"Machines/getAllMachines.php\";\r\nexport const updateMachineInfo = \"Machines/updateMachineInfo.php\";\r\n\r\n//Upload workers\r\nexport const getAllWorkersFromOracle =\r\n    \"Workers/uploadWorkers/getAllWorkersFromOracle.php\";\r\nexport const uploadWorkers = \"Workers/uploadWorkers/UploadWorkers.php\";\r\n\r\nexport const getAllUnits = \"getAllUnits.php\";\r\nexport const getAllSections = \"getAllSections.php\";\r\n\r\n//Workers\r\nexport const getAllWorkers = \"Workers/getAllWorkers.php\";\r\nexport const updateWorkerInfo = \"Workers/updateWorkerInfo.php\";\r\n\r\n//For Upload Style Bulletin\r\nexport const getOrdersForStyleBulletinFromOracle =\r\n    \"StyleBulletin/StyleBulletinUpload/getOrdersFromOracle.php\";\r\n\r\nexport const getStyleBulletin =\r\n    \"StyleBulletin/StyleBulletinUpload/fetchStyleBulletinForOrderFromOracle.php\";\r\nexport const uploadStyleBulletin =\r\n    \"StyleBulletin/StyleBulletinUpload/uploadStyleBuletin.php\";\r\n\r\n// For Cut Bundle Creation\r\nexport const getOrdersFromOracleForCutBundleCreation =\r\n    \"CutBundleCreation/getOrdersForBundleCreation.php\";\r\nexport const createCutBundleForOrder =\r\n    \"CutBundleCreation/createCutBundleForOrder.php\";\r\n\t// Lines\r\nexport const getLinesForUnit =\r\n\"getAllLinesForUnit.php\";\r\n\r\nexport const addUser =\r\n\"Users/createUser.php\";\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","module.exports = __webpack_public_path__ + \"static/media/WiMetrix.2ecbfe65.png\";","module.exports = __webpack_public_path__ + \"static/media/textile-industry-production.3057f5e9.jpg\";"],"sourceRoot":""}